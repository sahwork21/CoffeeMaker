name: Build CoffeeMaker with Github Actions
on: 
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main
jobs:
  Build-CoffeeMaker:
    runs-on: self-hosted
    steps:
      - name: Publish reminder
        uses: actions/github-script@v4.0.2
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Reminder: Wait until Github Actions has finished running the build before merging this PR!'
            })
                    
    
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ssh-key: '${{ secrets.SSH_PRIVATE_KEY }}'
          ssh-known-hosts: 'github.ncsu.edu ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCy5K6oZoBJ881aKKkon5MB016unAgciPVqNAlFY6PWtbUd7qJEwbJJAtxZcY43UmB8x4SW8yjqLGeQDEjioDkYY/Ml58Sh+gzAdeMeloGI2uwgVw77bGvcREAZ8s/lpx3D48XtvbS/IU4CgOO7RcMFsOH0y4jVX0LDdDxKLVXu/mUxnrqB8d/NtaZjOeI1b38LxFpfF6RVD7MBC9xhuZUcofVLQMhZq+OZ85xBxqb8UV5Ujp5hPbjO2uBDf3F1G0VLZko8W6LIiJaeBrEVl2UhQR2NDX5w7sUPg9D9mRWDQvIws1C887XeyF84cxkshFzuqbbtnGPVDxNpjMnDoWsN'
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls -la ${{ github.workspace }}
     
      
      - name: Setup JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: '11'

      - name: Copy config files for Spring Boot
        run: cp CoffeeMaker/src/main/resources/application.yml.template CoffeeMaker/src/main/resources/application.yml
        
      - name: Edit config file with DB credentials (do not change this!)
        run: sed -i 's/localhost/docker/g' CoffeeMaker/src/main/resources/application.yml && sed -i 's/password\:/password\:\ ${{ secrets.TEST_DB_PW }}/g' CoffeeMaker/src/main/resources/application.yml
          
      - name: Clean up Docker containers
        run: (docker stop $(docker ps -a -q) || true) && (docker rm $(docker ps -a -q) || true)
            
      - name: Set up MariaDB
        run: docker run --name mariadbtest -e MYSQL_ROOT_PASSWORD=${{ secrets.TEST_DB_PW }} -p 3306:3306 -d docker.io/library/mariadb:10.4
          
      - name: Wait for container to be active
        run: sleep 15s      
         
      - name: Check to make sure DB is active
        run: mysql -uroot -h docker -p${{ secrets.TEST_DB_PW }} -e 'SELECT version()'
      
      - name: Build CoffeeMaker with Maven
        run: cd CoffeeMaker && mvn --batch-mode --update-snapshots clean test checkstyle:checkstyle
 
      - name: Generate coverage badges
        id: jacoco
        run: > 
            python3 .github/generate_badge.py "CoffeeMaker/target/site/jacoco-ut/jacoco.csv"
            ".github/badges" "jacoco.svg" "branches.svg" "true" "true"
            "fail" "70" "50" "false" "false" "100 90 80 70 60 0" "#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44"
            
            
      - name: Log coverage percentage
        if: always()
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
               
      - name: Publish Test Report
        if: ${{ always() }}
        uses: engr-csc326-itrust/action-surefire-report@v1.02
          
      - name: Add coverage to PR
        id: publishJacoco
        uses: engr-csc326-itrust/jacoco-report@v1.02
        with:
          paths: ${{ github.workspace }}/CoffeeMaker/target/site/jacoco-ut/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 70          
          
      - name: Publish CheckStyle Report
        if: ${{ always() }}
        uses: engr-csc326-itrust/checkstyle-github-action@v1.0
        with:
          path: '**/checkstyle-result.xml'      
          
      - name: Commit the code coverage badge (if it changed)
        if: always()
        run: |
          DETATCHED_HEAD_FOUND=$(git status | grep 'HEAD detached' | wc -l)
          if [[ `git status --porcelain` && $DETATCHED_HEAD_FOUND -eq 0 ]]; then
            git config --global user.name 'Jenkins Service Account'
            git config --global user.email '10022+csc-jenkins-svc@users.noreply.github.ncsu.edu'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push
          fi
